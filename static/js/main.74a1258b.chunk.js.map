{"version":3,"sources":["hooks/InputState.js","reducer/TodosReducer.js","reducer/LocalStorageReducer.js","context/TodosContext.js","hooks/toggle.js","context/AlertContext.js","styles/EditTodoStyles.js","EditTodo.js","Checkbox.js","utils/sizes.js","styles/TodoStyles.js","Todo.js","Divider.js","styles/global.js","TodoList.js","styles/TodoFormStyles.js","TodoForm.js","utils/date.js","styles/TodoListContainerStyles.js","styles/AlertStyles.js","Alert.js","TodoListContainer.js","App.js","reportWebVitals.js","index.js"],"names":["InputState","initialVal","React","useState","state","setState","onChange","e","target","value","clear","reducer","todos","action","type","filter","todo","id","task","uuidv4","isComplete","map","LocalStorageReducer","key","initialValue","useReducer","JSON","parse","localStorage","getItem","dispatch","useEffect","setItem","stringify","defaultTodos","dispatchContext","createContext","DispatchContextProvider","children","todoReducer","Provider","Toggle","toggle","alertContext","AlertProvider","isAlert","toggleAlert","styles","EditTodo","display","justifyContent","alignItems","height","backgroundColor","fontSize","border","width","outline","paddingLeft","borderRadius","color","padding","margin","cursor","withStyles","toggleEdit","classes","inputRef","useContext","setValue","current","focus","className","maxLength","ref","onClick","preventDefault","trim","Checkbox","checked","sizes","size","xs","sm","md","lg","Todo","minHeight","TodoTask","marginLeft","fontFamily","TodoBtns","textDecoration","props","isEditing","useRef","Divider","style","borderTop","opacity","transition","todosList","useMemo","index","CSSTransition","timeout","classNames","length","TransitionGroup","Form","FormInput","borderBottomLeftRadius","FormAddBtn","clearValue","placeholder","date","Date","today","getDay","fullDate","getDate","getMonth","getFullYear","container","header","borderTopLeftRadius","borderTopRightRadius","textAlign","rightSide","fontWeight","Alert","heigth","position","top","right","left","bottom","zIndex","AlertBox","flexDirection","alertBox","handleClick","contains","document","addEventListener","removeEventListener","leftSide","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.74a1258b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst InputState = (initialVal = \"\") => {\r\n  const [state, setState] = React.useState(initialVal);\r\n\r\n  const onChange = (e) => setState(e.target.value);\r\n  const clear = () => setState(\"\");\r\n  return [state, onChange, clear];\r\n};\r\nexport default InputState;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction reducer(todos, action) {\r\n  switch (action.type) {\r\n    case \"delete\":\r\n      return todos.filter((todo) => action.id !== todo.id);\r\n    case \"add\":\r\n      return [...todos, { task: action.task, id: uuidv4(), isComplete: false }];\r\n    case \"done\":\r\n      return todos.map((todo) => {\r\n        if (action.id === todo.id) {\r\n          return { ...todo, isComplete: !todo.isComplete };\r\n        }\r\n        return todo;\r\n      });\r\n    case \"edit\":\r\n      return todos.map((todo) => {\r\n        if (action.id === todo.id) {\r\n          return { ...todo, task: action.task };\r\n        }\r\n        return todo;\r\n      });\r\n  }\r\n}\r\nexport default reducer;\r\n","import React from \"react\";\r\n\r\nconst LocalStorageReducer = (key, initialValue, reducer) => {\r\n  const [state, dispatch] = React.useReducer(reducer, initialValue, () => {\r\n    let value;\r\n\r\n    return (value = JSON.parse(localStorage.getItem(key)) || initialValue);\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return [state, dispatch];\r\n};\r\n\r\nexport default LocalStorageReducer;\r\n","import React from \"react\";\r\nimport todoReducer from \"../reducer/TodosReducer\";\r\nimport LocalStorageReducer from \"../reducer/LocalStorageReducer\";\r\nconst defaultTodos = [\r\n  { task: \"Do Laundry\", id: 1, isComplete: false },\r\n  { task: \"Meditate\", id: 2, isComplete: false },\r\n];\r\n\r\nexport const dispatchContext = React.createContext();\r\n\r\nexport const DispatchContextProvider = ({ children }) => {\r\n  const [todos, dispatch] = LocalStorageReducer(\r\n    \"todos\",\r\n    defaultTodos,\r\n    todoReducer\r\n  );\r\n\r\n  return (\r\n    <dispatchContext.Provider value={{ todos, dispatch }}>\r\n      {children}\r\n    </dispatchContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst Toggle = (initialVal = false) => {\r\n  const [state, setState] = React.useState(initialVal);\r\n\r\n  const toggle = () => setState(!state);\r\n\r\n  return [state, toggle];\r\n};\r\nexport default Toggle;\r\n","import React from \"react\";\r\nimport Toggle from \"../hooks/toggle\";\r\n\r\nexport const alertContext = React.createContext();\r\n\r\nexport const AlertProvider = ({ children }) => {\r\n  const [isAlert, toggleAlert] = Toggle(false);\r\n\r\n  return (\r\n    <alertContext.Provider value={{ isAlert, toggleAlert }}>\r\n      {children}\r\n    </alertContext.Provider>\r\n  );\r\n};\r\n","const styles = {\r\n  EditTodo: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    height: \"3rem\",\r\n    backgroundColor: \"rgb(245,245,255)\",\r\n\r\n    \"& input\": {\r\n      fontSize: \"1.2rem\",\r\n      height: \"95%\",\r\n      border: \"none\",\r\n      width: \"85%\",\r\n      outline: \"none\",\r\n      paddingLeft: \"1rem\",\r\n      backgroundColor: \"inherit\",\r\n    },\r\n    \"& div\": {\r\n      width: \"15%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    \"& button\": {\r\n      borderRadius: \"50%\",\r\n      backgroundColor: \"rgb(250,103,104)\",\r\n      color: \"white\",\r\n      border: \"none\",\r\n      outline: \"none\",\r\n      fontSize: \"1.4rem\",\r\n      padding: \"0.2rem 0.5rem\",\r\n      margin: \"0 1rem\",\r\n      width: \"2.5rem\",\r\n      cursor: \"pointer\",\r\n      height: \"80%\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"rgb(255,79,80)\",\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default styles;\r\n","import React from \"react\";\r\nimport InputState from \"./hooks/InputState\";\r\nimport { dispatchContext } from \"./context/TodosContext\";\r\nimport { alertContext } from \"./context/AlertContext\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport styles from \"./styles/EditTodoStyles\";\r\n\r\nconst EditTodo = ({ toggleEdit, task, id, classes, inputRef }) => {\r\n  const { toggleAlert } = React.useContext(alertContext);\r\n  const { dispatch } = React.useContext(dispatchContext);\r\n  const [value, setValue] = InputState(task);\r\n  React.useEffect(() => inputRef.current && inputRef.current.focus());\r\n  return (\r\n    <form className={classes.EditTodo}>\r\n      <input\r\n        value={value}\r\n        onChange={setValue}\r\n        type=\"text\"\r\n        maxLength=\"35\"\r\n        ref={inputRef}\r\n      />\r\n      <div>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            if (value.trim() === \"\") {\r\n              toggleAlert();\r\n            } else {\r\n              dispatch({ type: \"edit\", task: value, id });\r\n              toggleEdit();\r\n            }\r\n          }}\r\n        >\r\n          ✓\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default withStyles(styles)(EditTodo);\r\n","import React from \"react\";\r\nimport { dispatchContext } from \"./context/TodosContext\";\r\nimport \"./Checkbox.css\";\r\n\r\nconst Checkbox = ({ id, isComplete }) => {\r\n  const { dispatch } = React.useContext(dispatchContext);\r\n  return (\r\n    <label className=\"container\">\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={() => dispatch({ type: \"done\", id })}\r\n        checked={isComplete}\r\n      />\r\n      <span className=\"box\"></span>\r\n    </label>\r\n  );\r\n};\r\nexport default Checkbox;\r\n","const sizes = (size) => {\r\n  const sizes = {\r\n    xs: \"575.98px\",\r\n    sm: \"767.98px\",\r\n    md: \"991.98px\",\r\n    lg: \"1199.98px\",\r\n  };\r\n  return `@media (max-width: ${sizes[size]})`;\r\n};\r\nexport default sizes;\r\n","import sizes from \"../utils/sizes\";\r\n\r\nconst styles = {\r\n  Todo: {\r\n    fontSize: \"1.2rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    minHeight: \"3rem\",\r\n  },\r\n  TodoTask: {\r\n    width: \"85%\",\r\n    marginLeft: \"1rem\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [sizes(\"sm\")]: {\r\n      width: \"75%\",\r\n    },\r\n    \"& p\": {\r\n      marginLeft: \"1.5rem\",\r\n      color: \"rgba(0,0,0,0.7)\",\r\n      fontFamily: \"Rubik, sans-serif\",\r\n      [sizes(\"sm\")]: {\r\n        marginLeft: \"1rem\",\r\n\r\n        fontSize: \"1rem\",\r\n      },\r\n    },\r\n    \"& input\": {\r\n      \"&:checked\": {\r\n        color: \"red\",\r\n      },\r\n    },\r\n  },\r\n  TodoBtns: {\r\n    width: \"15%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    [sizes(\"sm\")]: {\r\n      width: \"25%\",\r\n    },\r\n    \"& i\": {\r\n      cursor: \"pointer\",\r\n\r\n      \"&.fa-trash\": {\r\n        \"&:hover\": {\r\n          color: \"red\",\r\n        },\r\n      },\r\n      \"&.fa-edit\": {\r\n        color: \"rgb(98,104,216)\",\r\n        \"&:hover\": {\r\n          color: \"rgb(49,58,214)\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  task: {\r\n    textDecoration: (props) => (props.isComplete ? \"line-through\" : \"none\"),\r\n  },\r\n};\r\nexport default styles;\r\n","import React from \"react\";\r\nimport EditForm from \"./EditTodo\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport toggle from \"./hooks/toggle\";\r\nimport { dispatchContext } from \"./context/TodosContext\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport styles from \"./styles/TodoStyles\";\r\n\r\nconst Todo = ({ task, classes, id, isComplete }) => {\r\n  const { dispatch } = React.useContext(dispatchContext);\r\n  const [isEditing, toggleEdit] = toggle(false);\r\n  const inputRef = React.useRef();\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <EditForm\r\n        toggleEdit={toggleEdit}\r\n        task={task}\r\n        id={id}\r\n        inputRef={inputRef}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.Todo}>\r\n      <div className={classes.TodoTask}>\r\n        <Checkbox id={id} isComplete={isComplete} />\r\n        <p className={classes.task}>{task}</p>\r\n      </div>\r\n      <div className={classes.TodoBtns}>\r\n        <span onClick={toggleEdit}>\r\n          <i className=\"far fa-edit\"></i>\r\n        </span>\r\n        <span\r\n          onClick={() => {\r\n            dispatch({ type: \"delete\", id });\r\n          }}\r\n        >\r\n          <i className=\"fas fa-trash\"></i>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default withStyles(styles)(Todo);\r\n","const Divider = () => (\r\n  <hr\r\n    style={{\r\n      borderTop: \"1px solid #bbb\",\r\n      margin: \"0\",\r\n    }}\r\n  />\r\n);\r\nexport default Divider;\r\n","const styles = {\r\n  \"@global\": {\r\n    \".todo-enter\": {\r\n      opacity: 0,\r\n    },\r\n    \".todo-enter-active\": {\r\n      opacity: 1,\r\n      transition: \"opacity 300ms ease-in\",\r\n    },\r\n    \".todo-exit\": {\r\n      opacity: 1,\r\n    },\r\n    \".todo-exit-active\": {\r\n      opacity: 0,\r\n      transition: \"opacity 300ms ease-in\",\r\n    },\r\n  },\r\n};\r\nexport default styles;\r\n","import Todo from \"./Todo\";\r\nimport React from \"react\";\r\nimport { dispatchContext } from \"./context/TodosContext\";\r\nimport Divider from \"./Divider\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport styles from \"./styles/global\";\r\n\r\nconst TodoList = () => {\r\n  const { todos } = React.useContext(dispatchContext);\r\n  const todosList = React.useMemo(() => {\r\n    return todos.map((todo, index) => (\r\n      <CSSTransition key={todo.id} timeout={300} classNames=\"todo\">\r\n        <>\r\n          <Todo\r\n            task={todo.task}\r\n            key={todo.id}\r\n            id={todo.id}\r\n            isComplete={todo.isComplete}\r\n          />\r\n          {index < todos.length - 1 && <Divider />}\r\n        </>\r\n      </CSSTransition>\r\n    ));\r\n  }, [todos]);\r\n  return (\r\n    <div>\r\n      <TransitionGroup>{todosList}</TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\nexport default withStyles(styles)(TodoList);\r\n","const styles = {\r\n  Form: {\r\n    height: \"3rem\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n\r\n    \"& div\": {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  FormInput: {\r\n    height: \"95%\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    fontSize: \"1.2rem\",\r\n    width: \"90%\",\r\n    paddingLeft: \"1rem\",\r\n    borderBottomLeftRadius: \"7px\",\r\n  },\r\n  FormAddBtn: {\r\n    width: \"10%\",\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"rgb(250,103,104)\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    fontSize: \"1.6rem\",\r\n    margin: \"0 1rem\",\r\n    width: \"2.5rem\",\r\n    cursor: \"pointer\",\r\n    height: \"80%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(255,79,80)\",\r\n    },\r\n  },\r\n};\r\nexport default styles;\r\n","import React from \"react\";\r\nimport InputState from \"./hooks/InputState\";\r\nimport { dispatchContext } from \"./context/TodosContext\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport styles from \"./styles/TodoFormStyles.js\";\r\nimport { alertContext } from \"./context/AlertContext\";\r\nconst TodoForm = ({ classes }) => {\r\n  const { dispatch } = React.useContext(dispatchContext);\r\n  const { toggleAlert } = React.useContext(alertContext);\r\n  const [value, setValue, clearValue] = InputState(\"\");\r\n  return (\r\n    <div>\r\n      <form className={classes.Form}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={setValue}\r\n          value={value}\r\n          className={classes.FormInput}\r\n          placeholder=\"Insert Todo\"\r\n          maxLength=\"35\"\r\n        />\r\n        <div>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              if (value.trim() === \"\") {\r\n                toggleAlert();\r\n              } else {\r\n                dispatch({ type: \"add\", task: value });\r\n                clearValue();\r\n              }\r\n            }}\r\n            className={classes.FormAddBtn}\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default withStyles(styles)(TodoForm);\r\n","const months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"Desember\",\r\n];\r\nconst days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nconst date = new Date();\r\nexport const today = days[date.getDay()];\r\nexport const fullDate = `${date.getDate()} ${\r\n  months[date.getMonth()]\r\n} ${date.getFullYear()}`;\r\n","import sizes from \"../utils/sizes\";\r\n\r\nconst styles = {\r\n  container: {\r\n    width: \"40%\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"7px\",\r\n    margin: \"0 auto\",\r\n\r\n    [sizes(\"md\")]: {\r\n      width: \"65%\",\r\n    },\r\n\r\n    [sizes(\"xs\")]: {\r\n      width: \"85%\",\r\n    },\r\n  },\r\n  header: {\r\n    backgroundColor: \"rgb(245,245,255)\",\r\n    borderTopLeftRadius: \"7px\",\r\n    borderTopRightRadius: \"7px\",\r\n    fontFamily: \"Work Sans, sans-serif\",\r\n    textAlign: \"left\",\r\n    padding: \"0.5rem 1rem \",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    [sizes(\"sm\")]: {\r\n      \"& h2\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n    },\r\n  },\r\n  rightSide: {\r\n    \"& h2\": {\r\n      fontWeight: \"400\",\r\n      color: \"rgb(98,104,216)\",\r\n    },\r\n  },\r\n};\r\nexport default styles;\r\n","const styles = {\r\n  Alert: {\r\n    width: \"100%\",\r\n    heigth: \"100%\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    right: \"0\",\r\n    left: \"0\",\r\n    bottom: \"0\",\r\n    backgroundColor: \"rgba(0,0,0,0.7)\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    zIndex: \"4\",\r\n  },\r\n  AlertBox: {\r\n    backgroundColor: \"rgb(240,240,240)\",\r\n    fontFamily: \"Work Sans, sans-serif\",\r\n    color: \"rgb(230,0,0)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"30%\",\r\n    padding: \"1rem\",\r\n    fontSize: \"1.5rem\",\r\n    borderRadius: \"7px\",\r\n    \"& button\": {\r\n      borderRadius: \"7px\",\r\n      padding: \"10px\",\r\n      fontSize: \"1.2rem\",\r\n      textAlign: \"center\",\r\n      color: \"white\",\r\n      backgroundColor: \"rgba(200,0,0,0.8)\",\r\n      border: \"none\",\r\n      cursor: \"pointer\",\r\n      outline: \"none\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"rgba(220,0,0,1)\",\r\n      },\r\n    },\r\n    \"& span\": {\r\n      borderRadius: \"50%\",\r\n      backgroundColor: \"red\",\r\n      color: \"white\",\r\n      fontSize: \"1.5rem\",\r\n      padding: \"0.5rem 1.1rem\",\r\n    },\r\n  },\r\n};\r\nexport default styles;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { alertContext } from \"./context/AlertContext\";\r\nimport styles from \"./styles/AlertStyles\";\r\n\r\nconst Alert = ({ classes }) => {\r\n  const { toggleAlert } = React.useContext(alertContext);\r\n  const alertBox = React.useRef();\r\n\r\n  const handleClick = (e) => {\r\n    if (!alertBox.current.contains(e.target)) {\r\n      toggleAlert();\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // add when mounted\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n    // return function to be called when unmounted\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.Alert}>\r\n      <div className={classes.AlertBox} onClick={handleClick} ref={alertBox}>\r\n        <span>!</span>\r\n        <p>Task cannot be empty</p>\r\n        <button onClick={toggleAlert}> Close </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Alert);\r\n","import React from \"react\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { today, fullDate } from \"./utils/date\";\r\nimport { dispatchContext } from \"./context/TodosContext\";\r\nimport { alertContext } from \"./context/AlertContext\";\r\nimport styles from \"./styles/TodoListContainerStyles\";\r\nimport Alert from \"./Alert\";\r\nconst TodoListContainer = ({ classes }) => {\r\n  const { todos } = React.useContext(dispatchContext);\r\n  const { isAlert } = React.useContext(alertContext);\r\n  return (\r\n    <div className={classes.container}>\r\n      {isAlert && <Alert />}\r\n      <div className={classes.header}>\r\n        <div className={classes.leftSide}>\r\n          <h2 style={{ fontWeight: 400, color: \"rgb(98,104,216)\" }}>{today}</h2>\r\n          <h2 style={{ color: \"rgba(0,0,0,0.65)\" }}>{fullDate}</h2>\r\n        </div>\r\n        <div className={classes.rightSide}>\r\n          <h2>\r\n            {1 > todos.length\r\n              ? \"You have no task\"\r\n              : `${todos.length} task left`}\r\n          </h2>\r\n        </div>\r\n      </div>\r\n      <TodoForm />\r\n      <TodoList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(TodoListContainer);\r\n","import TodoListContainer from \"./TodoListContainer\";\nimport { DispatchContextProvider } from \"./context/TodosContext\";\nimport { AlertProvider } from \"./context/AlertContext\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n// import Alert from \"./Alert\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DispatchContextProvider>\n        {/* <Alert /> */}\n        <AlertProvider>\n          <TodoListContainer />\n        </AlertProvider>\n      </DispatchContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}